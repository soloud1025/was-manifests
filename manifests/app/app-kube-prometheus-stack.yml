apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: monitoring-kube-prometheus-stack
  namespace: argo-cd
spec:
  project: default
  source:
    repoURL: https://prometheus-community.github.io/helm-charts
    chart: kube-prometheus-stack
    targetRevision: "77.5.0"                 
    helm:
      values: |
        fullnameOverride: kps

        crds:
          enabled: false

        grafana:
          adminUser: admin
          adminPassword: "1q2w3e4r!"
          service:
            type: LoadBalancer
            service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
            service.beta.kubernetes.io/aws-load-balancer-internal: "true"   # 내부 NLB
          persistence:
            enabled: false            # EmptyDir(휘발성)
          defaultDashboardsTimezone: Asia/Seoul
          ingress:
            enabled: false            # Ingress는 별도 파일로 관리
          nodeSelector:
            eks.amazonaws.com/nodegroup: Monitoring
          tolerations:
            - key: role
              operator: Equal
              value: monitoring
              effect: NoSchedule

        prometheus:
          prometheusSpec:
            externalLabels:
              cluster: prod-eks
            scrapeInterval: 30s
            evaluationInterval: 30s
            # storageSpec 없음 = EmptyDir(휘발성)
            serviceMonitorNamespaceSelector: {}
            serviceMonitorSelector: {}
            podMonitorNamespaceSelector: {}
            podMonitorSelector: {}
            nodeSelector:
              eks.amazonaws.com/nodegroup: Monitoring
            tolerations:
              - key: role
                operator: Equal
                value: monitoring
                effect: NoSchedule

        alertmanager:
          alertmanagerSpec:
            nodeSelector:
              eks.amazonaws.com/nodegroup: Monitoring
            tolerations:
              - key: role
                operator: Equal
                value: monitoring
                effect: NoSchedule
          config:
            global:
              resolve_timeout: 5m
              time_zone: Asia/Seoul
            route:
              receiver: "null"
            receivers:
              - name: "null"

        # DaemonSet가 테인트 노드에도 뜨도록
        prometheus-node-exporter:
          tolerations:
            - key: role
              operator: Equal     # 또는 Exists
              value: monitoring
              effect: NoSchedule

  destination:
    server: https://kubernetes.default.svc
    namespace: monitoring
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true

  ignoreDifferences:
    - group: apiextensions.k8s.io   #CRD에 달린 annotation 차이를 무시
      kind: CustomResourceDefinition
      jqPathExpressions:
        - .metadata.annotations
